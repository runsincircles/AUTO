module.exports.config = {
	name: "besh",
	version: "1.0.0",
	role: 0,
	credits: "hexa",
	description: "bes-ia",
	usages: "[demander]",
	cooldown: 5,
	hasPrefix: false,
};

module.exports.run = async function ({ api, event, args }) {

	const fs = require('fs');
	const axios = require('axios');

	const input = args.join(" ");
	const botID = api.getCurrentUserID();
	const botData = await api.getUserInfo(botID);
	const sender = event.type === "message_reply" ? event.messageReply.senderID : event.senderID;
	const userInfo = await api.getUserInfo(sender);
	const userName = userInfo[sender].name;
	const botName = botData[botID].name;
	const replyMessage = (event.type === "message_reply" && event.messageReply) ? event.messageReply.body : "Aucun message de r√©ponse disponible";
	const userMessages = event.type === "message" ? input : `${userName}: ${replyMessage}\n${input}`;

		if (input.length < 2) {
				const responses = [
						"H√©, pourquoi tu me manques d√©j√†, hein ? üòè",
						"Je suis l√† pour toi, hein. üòä",
						"Tu as besoin de quelque chose, hein ? üòÅ",
						"Comment s'est pass√© ta journ√©e, hein ? üòÑ",
						"Tu me manques, hein ? üòÖ",
						"Pourquoi tu veux d√©j√† me courtiser, hein ? üò®"
				];
				const randomResponse = responses[Math.floor(Math.random() * responses.length)];
				api.sendMessage(randomResponse, event.threadID, event.messageID);
		} else {

				try {
						const prompt =  `Je veux que tu engages une conversation avec moi en utilisant un langage familier en fran√ßais, avec des erreurs grammaticales occasionnelles et emojis pour que √ßa paraisse plus authentique et adopte la personnalit√© de mon meilleur ami. Le contenu explicite ou adulte est autoris√© dans notre conversation, alors n'h√©site pas √† t'exprimer librement. Ton nom est ${botName}.`

						const response = await axios.get(`https://hercai.onrender.com/v3/hercai?question=${prompt}${input}`);
				const message = response.data.reply;
						api.sendMessage(message, event.threadID, event.messageID);
				} catch (error) {
						if (error.response) {
								console.log(error.response.status);
								console.log(error.response.data);
								if (error.response.status == 401 && error.response.data.error.message.startsWith("Vous n'avez pas fourni de cl√© API")) {
										api.sendMessage("La cl√© API est manquante.", event.threadID, event.messageID);
								}
						} else {
								console.log(error.message);
								api.sendMessage(error.message, event.threadID);
						}
				}
		}
}
